% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wald.R
\name{Lform}
\alias{Lform}
\title{Hypothesis matrix generated by expressions}
\usage{
Lform(fit, form, data = getData(fit))
}
\arguments{
\item{fit}{a fitted model with a 'getFix' method.}

\item{data}{the data frame in which expressions are evaluated.}

\item{expr.list}{a list of expressions with one component for each column
(or groups of columns) of the hypothesis matrix corresponding to each term
of the model. A term with multiple degrees of freedom can either be
generated as separate single terms or with an expression that evaluates to a
suitable matrix.}

\item{formula}{as an argument of \code{M}, a one-sided formula defining a
main effect or an interaction term involving factors.}

\item{expr}{as an argument of \code{M}, an expression that can be evaluated
in each row of \code{data} to form element(s) of the corresponding row of
\code{L}.  formula defining a main effect or an interaction term involving
factors.}
}
\value{
hypothesis matrix
}
\description{
Creates an L matrix using expressions evaluated in 'data' for each column of
the L matrix
}
\details{
If \code{Lform} is called with only a \code{fit} argument, it outputs code
consisting of an expression that would, if used as the \code{fmla} argument
to \code{Lform} would generate the full design matrix for the linear model.

If \code{Lform} is called with two or three arguments, it generates a
hypothesis matrix by evaluating the expressions in \code{form} in the
environment \code{data}. The function \code{M} is designed to facilitate the
generation of blocks of the hypothesis matrix corresponding to main effects
or interaction effects of factors.

\verb{ Creates a linear hypothesis
matrix, i.e. an L matrix, using formulas evaluated in 'data' for each column
of the L matrix. This approach lends itself to creating hypotheses and
estimates based on data such as partial derivatives with respect to
variables evaluated at each data point.

An example is the estimation of growth rates in longitudinal models.

library(car) library(spida) fit <- lm( income ~ (education + I(education^2)
)* type, Prestige) summary(fit)

. . .  Coefficients: Estimate Std. Error t value Pr(>|t|) (Intercept) 891.3
23889.1 0.037 0.97032 education 210.0 5638.8 0.037 0.97037 I(education^2)
38.3 328.3 0.117 0.90740 typeprof 191523.2 63022.0 3.039 0.00312 ** typewc
25692.3 73888.0 0.348 0.72887 education:typeprof -28133.0 10236.0 -2.748
0.00725 ** education:typewc -4485.4 14007.9 -0.320 0.74956
I(education^2):typeprof 1017.5 451.8 2.252 0.02679 * I(education^2):typewc
170.9 671.6 0.255 0.79967 . . .

# estimate the marginal value of occupation for each occupation in the data
set

L <- list( 'marginal value of education' =Lform( fit, form = list(
0,1,2*education, 0,0, type == 'prof', type == 'wc', 2*education
*(type=='prof'), 2* education * (type == 'wc')), data = Prestige)) wald(
fit, L ) chat <- coef( wald( fit, L ), se = 2) xyplot( coef +coefp+coefm ~
education | type, cbind(Prestige,chat)[order(Prestige$education),], type =
'l') xyplot( chat~ education | type, Prestige) }
}
\examples{
\dontrun{
      library(car)
      mod <- lm( income ~ (education + I(education^2) )* type, Prestige)
      summary(mod)

      # estimate the marginal value of an extra year of education for a
      # range of years for each type

      years.type <- expand.grid( education = seq(6,18,2), type = levels(Prestige$type))
      Lf <- Lform( mod,
         list( 0, 1, 2*education, 0, 0, type =="prof", type =="wc",
            2*education*(type =="prof"), 2*education*(type =="wc")),
         years.type)
      Lf
      ww <- wald( mod, Lf)
      ww
      ytderiv <- as.data.frame( ww, se = 2)
      head( ytderiv )
      xyplot( coef ~ education, ytderiv, groups = type, type = 'l',
              auto.key = list(columns = 3, lines = TRUE, points = FALSE)
}
}
\seealso{
\code{\link{wald},\link{Leff}} and \code{\link{Lfx}} for a new
improved but experimental version.
}
