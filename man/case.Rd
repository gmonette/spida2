% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.R
\name{case}
\alias{case}
\title{Vectorized ifelse with multiple conditions}
\usage{
case(.select., ...)
}
\arguments{
\item{.select.}{a variable whose values determine the
argument to be used}

\item{\dots}{named arguments and one possibly unnamed argument.}
}
\description{
Avoids nested ifelse statements when the action depends on
the value of a variable
}
\details{
Each argument in \dots evaluates
to a vector whose value is returned where the name of the
argument matches a value of \code{.select.}.

The vectors in \dots are combined into a matrix with
\code{\link{cbind}} and the names of the arguments
are used as values of \code{.select.} to select which
vector value is returned.  See the examples.

If there is an unnamed argument, its value is used
as a value in \code{.select.} is not matched by
an argument name.

See an alternative: \code{\link[dplyr]{case_when}}
}
\examples{
x <- c(letters[1:4],NA)
case(x, a = 'was an a', b = 'was a b', z = 'was a z')
case(x, a = 'was an a', x) # x is returned as default
# numerical 'select' is coerced to character
case(1:4, '1' = 'was a 1', '2' = 'was a 2')

location <- c('England','England','France','France',
     'Germany','Spain')
xvar <- c('yes','no','non','oui','nein','si')
case(location,
   'England' = tr(xvar, c('yes','no'), c(1,0)),
   'France'  = tr(xvar, c('oui','non'), c(1,0)),
   'Germany' = tr(xvar, c('nein','ja'), c(0,1)))
case(location,
   'England' = tr(xvar, c('yes','no'), c(1,0)),
   'France'  = tr(xvar, c('oui','non'), c(1,0)),
   'Germany' = tr(xvar, c('nein','ja'), c(0,1)),
   xvar) 
case(location,
   'England' = tr(xvar, c('yes','no'), c(1,0)),
   'France'  = tr(xvar, c('oui','non'), c(1,0)),
   'Germany' = tr(xvar, c('nein','ja'), c(0,1)),
   'no match')
}
